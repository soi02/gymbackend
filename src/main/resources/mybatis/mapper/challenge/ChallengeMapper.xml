<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ca.gymbackend.challenge.mapper.ChallengeMapper">

    <!-- 챌린지 생성 -->

    <!-- 생성 순서 1. 챌린지 등록 -->
    <insert id="createChallenge" useGeneratedKeys="true" keyProperty="challengeId" >
        INSERT INTO challenge (
            challenge_creator,
            challenge_title,
            challenge_description,
            challenge_max_members,
            challenge_recruit_start_date,
            challenge_recruit_end_date,
            challenge_duration_days,
            challenge_thumbnail_path,
            created_at
        ) VALUES (
            #{challengeCreator},
            #{challengeTitle},
            #{challengeDescription},
            #{challengeMaxMembers},
            #{challengeRecruitStartDate},
            #{challengeRecruitEndDate},
            #{challengeDurationDays},
            #{challengeThumbnailPath},
            NOW()
        );
    </insert>

    <!-- 생성 순서 2. 마지막 insert된 challenge_id 가져오기 -->
    <select id="findLastInsertedChallengeId" resultType="int">
        SELECT LAST_INSERT_ID();
    </select>

    <!-- 키워드 이름으로 키워드 ID 조회 -->
    <select id="findKeywordIdByKeywordName" parameterType="string" resultType="int">
        SELECT keyword_id FROM keyword WHERE keyword_name = #{keywordName}
    </select>

    <!-- 생성 순서 3. 챌린지 - 키워드 연결 -->
    <insert id="createChallengeKeyword">
        INSERT INTO challenge_keyword (challenge_id, keyword_id)
        VALUES (#{challengeId}, #{keywordId});
    </insert>





    <!-- 챌린지 가져오기 (목록) -->
    <select id="findAllChallengeList" resultType="com.ca.gymbackend.challenge.dto.ChallengeCreateRequest">
        SELECT
            challenge_id AS challengeId,
            challenge_creator AS challengeCreator,
            challenge_title AS challengeTitle,
            challenge_description AS challengeDescription,
            challenge_max_members AS challengeMaxMembers,
            challenge_recruit_start_date AS challengeRecruitStartDate,
            challenge_recruit_end_date AS challengeRecruitEndDate,
            challenge_duration_days AS challengeDurationDays,
            challenge_thumbnail_path AS challengeThumbnailPath
        FROM challenge
    </select>




    <!-- 챌린지 상세보기 -->
    <select id="findChallengeDetailByChallengeId" parameterType="int" resultType="com.ca.gymbackend.challenge.dto.ChallengeDetailResponse">
        SELECT
            c.challenge_id AS challengeId,
            c.challenge_creator AS challengeCreator, 
            c.challenge_title AS challengeTitle, 
            c.challenge_description AS challengeDescription, 
            c.challenge_max_members AS challengeMaxMembers, 
            c.challenge_participant_count AS participantCount, 
            c.challenge_recruit_start_date AS challengeRecruitStartDate, 
            c.challenge_recruit_end_date AS challengeRecruitEndDate,     
            c.challenge_duration_days AS challengeDurationDays, 
            c.challenge_thumbnail_path AS challengeThumbnailPath, 
            
            GROUP_CONCAT(k.keyword_name ORDER BY k.keyword_name ASC SEPARATOR ',') AS challengeKeywordsString
    
        FROM
            challenge c
        INNER JOIN
            challenge_keyword ck ON c.challenge_id = ck.challenge_id
        INNER JOIN
            keyword k ON ck.keyword_id = k.keyword_id
        WHERE
            c.challenge_id = #{challengeId}
        GROUP BY
            c.challenge_id, c.challenge_creator, c.challenge_title, c.challenge_description,
            c.challenge_max_members, c.challenge_participant_count,
            c.challenge_duration_days, c.challenge_thumbnail_path, c.created_at
    </select>




    <!-- 챌린지 도전 시작 -->
    <!-- user_challenge 테이블에 사용자 챌린지 정보를 삽입 -->
    <insert id="insertUserChallenge">
        INSERT INTO user_challenge (
            user_id,
            challenge_id,
            personal_join_date,
            personal_end_date,
            challenge_completed
        ) VALUES (
            #{userId},
            #{challengeId},
            NOW(),
            DATE_ADD(NOW(), 
            INTERVAL (SELECT challenge_duration_days FROM challenge WHERE challenge_id = #{challengeId}) DAY), 'N'                     );
    </insert>

    <update id="increaseChallengeParticipantCount">
        UPDATE challenge
        SET challenge_participant_count = challenge_participant_count + 1
        WHERE challenge_id = #{challengeId};
    </update>






    <!-- 나의 수련기록 -->
    <!-- 내가 참여한 챌린지 목록 조회 -->
    <select id="findAllMyChallengeList" resultType="com.ca.gymbackend.challenge.dto.ChallengeMyRecordsResponse">
        SELECT
            c.challenge_id AS challengeId,
            c.challenge_title AS challengeTitle,
            c.challenge_thumbnail_path AS challengeThumbnailPath,
            c.challenge_duration_days AS challengeDurationDays,
            uc.personal_join_date AS personalJoinDate  FROM user_challenge uc                                 JOIN challenge c ON uc.challenge_id = c.challenge_id
        WHERE uc.user_id = #{userId}
        ORDER BY uc.personal_join_date DESC
    </select>


    <!-- 특정 챌린지의 총 출석 일수를 조회 -->
    <select id="countAttendanceDays" resultType="int">
        SELECT COUNT(*)
        FROM attendance_record
        WHERE user_id = #{userId}
        AND challenge_id = #{challengeId}
    </select>

    <!-- 특정 챌린지에서 오늘 출석했는지 출석여부 확인 -->
    <select id="hasAttendedToday" resultType="int">
        SELECT COUNT(*)
        FROM attendance_record
        WHERE user_id = #{userId}
        AND challenge_id = #{challengeId}
        AND attendance_date = CURDATE()
    </select>


</mapper>