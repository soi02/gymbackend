<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ca.gymbackend.buddy.mapper.BuddySqlMapper">

    <insert id="insertBuddyList" parameterType="com.ca.gymbackend.buddy.dto.BuddyDto">
        INSERT INTO buddy (user_id, buddy_age_id, preferred_gender, intro)
        VALUES
        <foreach collection="buddyAgeList" item="age" separator=",">
            (#{userId}, #{age.id}, #{preferredGender}, #{intro})
        </foreach>
    </insert>

    <select id="findByAgeId" parameterType="int" resultType="com.ca.gymbackend.buddy.dto.AgeDto">
        SELECT * FROM buddy_age WHERE id = #{id}
    </select>

    <update id="updateIsBuddy" parameterType="int">
        UPDATE user
        SET is_buddy = true
        WHERE id = #{userId}
    </update>

   <select id="getBuddyUserList" resultType="map">
       SELECT 
            u.id AS user_id,
            u.name,
            u.gender,
            u.birth ,
            u.address,
            u.phone,
            u.height ,
            u.weight ,
            u.muscle_mass ,
            u.profile_image,
            b.intro,
        GROUP_CONCAT(ba.age ORDER BY ba.age SEPARATOR ', ') AS buddy_ages
        FROM user u
        JOIN buddy b ON u.id = b.user_id
        JOIN buddy_age ba ON b.buddy_age_id = ba.id
        WHERE u.is_buddy = true
        GROUP BY u.id
    </select>


    <!-- 매칭 -->
    <insert id="insertMatching">
        INSERT INTO matching (send_buddy_id, receiver_buddy_id)
        VALUES (#{sendBuddyId}, #{receiverBuddyId});
    </insert>

    <update id="updateMatchingStatus" parameterType="map">
        UPDATE matching
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <select id="selectMatchingNotifications" resultType="map">
        SELECT 
            m.id AS matching_id,
            m.send_buddy_id,
            m.receiver_buddy_id,
            m.status,
            sb.intro AS sender_intro,
            rb.intro AS receiver_intro,
            su.name AS sender_name,
            ru.name AS receiver_name,
            su.profile_image AS sender_image,
            ru.profile_image AS receiver_image
        FROM matching m
        JOIN buddy sb ON m.send_buddy_id = sb.id
        JOIN buddy rb ON m.receiver_buddy_id = rb.id
        JOIN user su ON sb.user_id = su.id
        JOIN user ru ON rb.user_id = ru.id
        WHERE m.send_buddy_id = #{buddyId} OR m.receiver_buddy_id = #{buddyId}
        ORDER BY m.id DESC
    </select>

    <!-- <insert id="insertInitialChat" parameterType="map">
        INSERT INTO chat (matching_id, send_buddy_id, message, sent_at, is_read)
        VALUES (#{matchingId}, #{sendBuddyId}, '채팅이 시작되었습니다.', NOW(), false)
    </insert> -->

</mapper>